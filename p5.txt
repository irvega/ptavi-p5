 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura? 
        954
 ** ¿Cuánto tiempo dura la captura? 
        56.149345 (Time)
 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes? 
        192.168.1.34 que es una IP privada porque empieza por 192, se sabe porque es 
        la unica IP que sale en todos los paquetes. 


3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real? 
        Es mayor UDP, si ya que TCP no es buena para conexiones en tiempo real debido a 
        que se basa en retransmitir paquetes, es un protocolo fiable. 
 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
        SIP, RTP, HTTP
 **¿Cuales son señal y cuales ruido?
        Señal: SIP, UDP, TCP, HTTP, RTTP, Data
        Ruido: Address Resolution Protocol.
4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos? 
        En el segundo 7 (register), 14 y 16 (Invite), 38-39 (Bye) y 55 (Se da de baja)
 ** Y los paquetes con RTP, ¿cuándo se envían?
        16-38 que es el tiempo que dura la llamada.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas? 
        DNS
 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
        80.58.61.250 (ya que el primero en enviar es el cliente)(Dirección del DNS que da 
        la IP del servidor)
 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres? 
        86.64.162.35
6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo? 
        Full request URI: http://ekiga.net/ip/ (Se ve en el gET de HTTP
 ** ¿Qué user agent (UA) la está pidiendo?
        Ekiga (192.168.1.34)
 ** ¿Qué devuelve el servidor? 
        HTTP/1.1 200 OK  (text: 83.36.48.212)
 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor? 
        212.128.255.20 que es mi IP, sin embargo, en la práctica vemos que nos sale una 
        IP 83... distinta a 192... ya que está detrás de un NAT. 

7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
        Protocolo cliente/servidor que permite a clientes NAT encontrar su dirección IP pública y averiguar que tipo de NAT es (si sólo permite que abra conexión el cliente...)
 ** ¿Estamos tras un NAT?
    Sí, ya que la IP con la que ven al servidor es 83.36.48.212.

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar? 86.64.162.35 (Es a la que lo envía el register)
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP? 
        5060 (port destino)
 ** ¿Qué método SIP utiliza el UA para registrarse? 
        Register
 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA? 
        Allow: INVITE,ACK,OPTIONS,BYE,CANCEL,NOTIFY,REFER,MESSAGE

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
        No, Status: 401 Unauthorized 
 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
        Status: 401 Unauthorized si no se realiza correctamente y Status: 200 OK
 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
        El segundo tiene numero de identificación (nonce) y por ello el paquete es mas grande 712bytes y el primero 523bytes.
 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
        3600 segundos

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
        Si, From: "Gregorio Robles" <sip:grex@ekiga.net>
 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
        El SDP. SDP. 
 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
        No,85	Status: 407 Proxy Authentication Required | 
 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
    El segundo invite da la autorización y por lo tanto el paquete es mas grade.

11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
        RTP (conexión en tiempo real, no fiable, paquetes si llegan en tiempo no se reenvian)
        (H.261 es un estandar de codificacion)
 ** ¿Cuál es el tamaño de paquete de los mismos?
        214bytes
 ** ¿Se utilizan bits de padding?
        No. Padding: False
 ** ¿Cuál es la periodicidad de los paquetes que se envían?
        0.02 seg (8000 muestas-seg>160bytes-x --> 160 es la diferencia entre time-derecha
        en RTP) (No se pude mirar en time porque es cuando te llega)
 ** ¿Cuántos bits/segundo estamos enviando?
        64kbit/s


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?
        2 flujos (Uno de audio, no estereo, y otro de video --> Solo un lado)
        Audio ->Payload g711A
        Video ->Payload h261
 ** ¿Cuántos paquetes se pierden?
        Lost RTP packets = 0 (0,00%)
 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
        Max Delta (ms) 1290,47900 --> Retardo (Tiempo que pasa entre un paquete y otro)
 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
    Max:183.095775
    Min:183.240269
    Jitter variacción. Malo.

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
        Delta = 0 ms 
        Jitter = 0 ms
 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
        Lo sabemos ya que el primer paquete tiene una marca (1... .... = Marker: True)
 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
        246
 ** ¿A qué se debe el cambio tan brusco del jitter?
        Debido a que hay mas flujo en la red. 
 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
        No, ya que el jitter es la media de todas las deltas anteriores y el cambio de tiempo es el timpo exacto de recepción.
 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
       Si sube mucho el valor de la delta, sube el jitter(60) y el siguiente paquete 
       bajara drasticamente(20) y el jitter empieza a descender ligeramente. 

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación?
        24.8
 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
       SRC sirve para sincronizar con time stap.El de cada flujo SSCR video:0x43306582 
       y SSRC audio:0xBF4AFD37. Porque hay dos flujos. No.

15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?
        BYE
 ** ¿En qué trama(s)?
        924,925,927,933
 ** ¿Por qué crees que se envía varias veces?
        Destinatio unreachable (destino inalcanzable)

16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
       (remove 1 binding) Porque se da de baja: Expires: 0
 ** ¿En qué trama sucede esto?
        950 y 952 con autorizacion 
 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
       Envia expire a 0


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

17.  Dirígete a la web http://www.ekiga.net con el navegador y créate una  cuenta.
Lanza  Ekiga,  y  config ́uralo  con  los  datos  de  la  cuenta
que te acabas de crear.  Comprueba que est ́as conectado (En la barra
al final de la ventana podr ́as ver “Connected”).  Al terminar,  cierra
completamente Ekiga
    

18.  Captura una sesion SIP de una conversación con el número SIP sip:9999@qxip.net
Recuerda que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso.

19.  Observa las diferencias en el inicio de la conversacion entre el entorno
del laboratorio y el del ejercicio anterior 3:
•¿Es necesario el uso de DNS y STUN? ¿Por que?
    Depende si se ha llamado antes, en mi caso no llame antes y por lo tanto no tenia
la direccion por lo que necesitas DNS. STUN si para comprobar si estas detras de un NAT, siempre lo comprueba (suele estar) FILTRAR POR CLASSICSTUN. 
•¿Son diferentes el registro y la descripcion de la sesion?
    Sí, ya que la descripcion de sesion viene en el body y el registro en el message header.

20.  Identifica  las  diferencias  existentes  entre  esta  conversaci ́on  y  la  con-
versación anterior:
•¿Cuantos flujos tenemos?
    4 (dos de video y dos de audio, ambas partes) 
    Se ve en Filter: RTP ->Telephony-RTP-show all
•¿Cual es su periodicidad?
    Ideal: 8000bytes-seg, real: 620bytes time stam(derecha)-x --> 0.07
•¿Cuanto  es  el  valor  maximo  del  delta  y  los  valores  medios  y maximo del jitter?
    Delta: 36, max jitter: 13.59, medium jitter:13.14. Muchos a cero ya que no hay mucho
    flujo en la red. 
•¿Podrıas reproducir la conversacion desde Wireshark? ¿Como? Comprueba  que  poniendo 
 un  valor  demasiado  pequeno  para  el buffer de jitter, la conversacion puede no tener 
 la calidad necesaria.
    Si desde RTP ->Telephony-RTP-show all-Analayzer-player-decode
•¿Sabrıas decir que tipo de servicio ofrece sip:9999@qxip.net?
    Es un canal de musica. 

21.  Filtra por los paquetes SIP de la captura y guarda unicamente los
paquetes SIP como p5.pcapng.  Abre el fichero guardado para cercio-
rarte de que lo has hecho bien.  Deberas guardarlo en un archivo de nombre
p5.pcapng y anadirlo al repositorio.
    Hecho

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la pr ́actica, realiza un push para sincronizar tu repositorio GitHub]
